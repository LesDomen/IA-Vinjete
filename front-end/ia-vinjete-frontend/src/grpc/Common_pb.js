// source: Common.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.SUA_Microservices_gRPC.DoubleData', null, global);
goog.exportSymbol('proto.SUA_Microservices_gRPC.Empty', null, global);
goog.exportSymbol('proto.SUA_Microservices_gRPC.Item', null, global);
goog.exportSymbol('proto.SUA_Microservices_gRPC.Items', null, global);
goog.exportSymbol('proto.SUA_Microservices_gRPC.Order', null, global);
goog.exportSymbol('proto.SUA_Microservices_gRPC.Orders', null, global);
goog.exportSymbol('proto.SUA_Microservices_gRPC.Status', null, global);
goog.exportSymbol('proto.SUA_Microservices_gRPC.StringData', null, global);
goog.exportSymbol('proto.SUA_Microservices_gRPC.Supplier', null, global);
goog.exportSymbol('proto.SUA_Microservices_gRPC.Suppliers', null, global);
goog.exportSymbol('proto.SUA_Microservices_gRPC.User', null, global);
goog.exportSymbol('proto.SUA_Microservices_gRPC.Users', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SUA_Microservices_gRPC.Empty = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SUA_Microservices_gRPC.Empty, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SUA_Microservices_gRPC.Empty.displayName = 'proto.SUA_Microservices_gRPC.Empty';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SUA_Microservices_gRPC.StringData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SUA_Microservices_gRPC.StringData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SUA_Microservices_gRPC.StringData.displayName = 'proto.SUA_Microservices_gRPC.StringData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SUA_Microservices_gRPC.DoubleData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SUA_Microservices_gRPC.DoubleData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SUA_Microservices_gRPC.DoubleData.displayName = 'proto.SUA_Microservices_gRPC.DoubleData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SUA_Microservices_gRPC.User = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SUA_Microservices_gRPC.User, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SUA_Microservices_gRPC.User.displayName = 'proto.SUA_Microservices_gRPC.User';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SUA_Microservices_gRPC.Users = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.SUA_Microservices_gRPC.Users.repeatedFields_, null);
};
goog.inherits(proto.SUA_Microservices_gRPC.Users, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SUA_Microservices_gRPC.Users.displayName = 'proto.SUA_Microservices_gRPC.Users';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SUA_Microservices_gRPC.Order = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SUA_Microservices_gRPC.Order, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SUA_Microservices_gRPC.Order.displayName = 'proto.SUA_Microservices_gRPC.Order';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SUA_Microservices_gRPC.Orders = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.SUA_Microservices_gRPC.Orders.repeatedFields_, null);
};
goog.inherits(proto.SUA_Microservices_gRPC.Orders, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SUA_Microservices_gRPC.Orders.displayName = 'proto.SUA_Microservices_gRPC.Orders';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SUA_Microservices_gRPC.Status = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SUA_Microservices_gRPC.Status, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SUA_Microservices_gRPC.Status.displayName = 'proto.SUA_Microservices_gRPC.Status';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SUA_Microservices_gRPC.Supplier = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SUA_Microservices_gRPC.Supplier, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SUA_Microservices_gRPC.Supplier.displayName = 'proto.SUA_Microservices_gRPC.Supplier';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SUA_Microservices_gRPC.Suppliers = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.SUA_Microservices_gRPC.Suppliers.repeatedFields_, null);
};
goog.inherits(proto.SUA_Microservices_gRPC.Suppliers, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SUA_Microservices_gRPC.Suppliers.displayName = 'proto.SUA_Microservices_gRPC.Suppliers';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SUA_Microservices_gRPC.Item = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SUA_Microservices_gRPC.Item, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SUA_Microservices_gRPC.Item.displayName = 'proto.SUA_Microservices_gRPC.Item';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SUA_Microservices_gRPC.Items = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.SUA_Microservices_gRPC.Items.repeatedFields_, null);
};
goog.inherits(proto.SUA_Microservices_gRPC.Items, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SUA_Microservices_gRPC.Items.displayName = 'proto.SUA_Microservices_gRPC.Items';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SUA_Microservices_gRPC.Empty.prototype.toObject = function(opt_includeInstance) {
  return proto.SUA_Microservices_gRPC.Empty.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SUA_Microservices_gRPC.Empty} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SUA_Microservices_gRPC.Empty.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SUA_Microservices_gRPC.Empty}
 */
proto.SUA_Microservices_gRPC.Empty.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SUA_Microservices_gRPC.Empty;
  return proto.SUA_Microservices_gRPC.Empty.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SUA_Microservices_gRPC.Empty} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SUA_Microservices_gRPC.Empty}
 */
proto.SUA_Microservices_gRPC.Empty.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SUA_Microservices_gRPC.Empty.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SUA_Microservices_gRPC.Empty.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SUA_Microservices_gRPC.Empty} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SUA_Microservices_gRPC.Empty.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SUA_Microservices_gRPC.StringData.prototype.toObject = function(opt_includeInstance) {
  return proto.SUA_Microservices_gRPC.StringData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SUA_Microservices_gRPC.StringData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SUA_Microservices_gRPC.StringData.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SUA_Microservices_gRPC.StringData}
 */
proto.SUA_Microservices_gRPC.StringData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SUA_Microservices_gRPC.StringData;
  return proto.SUA_Microservices_gRPC.StringData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SUA_Microservices_gRPC.StringData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SUA_Microservices_gRPC.StringData}
 */
proto.SUA_Microservices_gRPC.StringData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SUA_Microservices_gRPC.StringData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SUA_Microservices_gRPC.StringData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SUA_Microservices_gRPC.StringData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SUA_Microservices_gRPC.StringData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string Data = 1;
 * @return {string}
 */
proto.SUA_Microservices_gRPC.StringData.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.SUA_Microservices_gRPC.StringData} returns this
 */
proto.SUA_Microservices_gRPC.StringData.prototype.setData = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SUA_Microservices_gRPC.DoubleData.prototype.toObject = function(opt_includeInstance) {
  return proto.SUA_Microservices_gRPC.DoubleData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SUA_Microservices_gRPC.DoubleData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SUA_Microservices_gRPC.DoubleData.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SUA_Microservices_gRPC.DoubleData}
 */
proto.SUA_Microservices_gRPC.DoubleData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SUA_Microservices_gRPC.DoubleData;
  return proto.SUA_Microservices_gRPC.DoubleData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SUA_Microservices_gRPC.DoubleData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SUA_Microservices_gRPC.DoubleData}
 */
proto.SUA_Microservices_gRPC.DoubleData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SUA_Microservices_gRPC.DoubleData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SUA_Microservices_gRPC.DoubleData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SUA_Microservices_gRPC.DoubleData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SUA_Microservices_gRPC.DoubleData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
};


/**
 * optional double Data = 1;
 * @return {number}
 */
proto.SUA_Microservices_gRPC.DoubleData.prototype.getData = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SUA_Microservices_gRPC.DoubleData} returns this
 */
proto.SUA_Microservices_gRPC.DoubleData.prototype.setData = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SUA_Microservices_gRPC.User.prototype.toObject = function(opt_includeInstance) {
  return proto.SUA_Microservices_gRPC.User.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SUA_Microservices_gRPC.User} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SUA_Microservices_gRPC.User.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    email: jspb.Message.getFieldWithDefault(msg, 2, ""),
    password: jspb.Message.getFieldWithDefault(msg, 3, ""),
    isadmin: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SUA_Microservices_gRPC.User}
 */
proto.SUA_Microservices_gRPC.User.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SUA_Microservices_gRPC.User;
  return proto.SUA_Microservices_gRPC.User.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SUA_Microservices_gRPC.User} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SUA_Microservices_gRPC.User}
 */
proto.SUA_Microservices_gRPC.User.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsadmin(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SUA_Microservices_gRPC.User.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SUA_Microservices_gRPC.User.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SUA_Microservices_gRPC.User} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SUA_Microservices_gRPC.User.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIsadmin();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string Id = 1;
 * @return {string}
 */
proto.SUA_Microservices_gRPC.User.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.SUA_Microservices_gRPC.User} returns this
 */
proto.SUA_Microservices_gRPC.User.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Email = 2;
 * @return {string}
 */
proto.SUA_Microservices_gRPC.User.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.SUA_Microservices_gRPC.User} returns this
 */
proto.SUA_Microservices_gRPC.User.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Password = 3;
 * @return {string}
 */
proto.SUA_Microservices_gRPC.User.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.SUA_Microservices_gRPC.User} returns this
 */
proto.SUA_Microservices_gRPC.User.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool IsAdmin = 4;
 * @return {boolean}
 */
proto.SUA_Microservices_gRPC.User.prototype.getIsadmin = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SUA_Microservices_gRPC.User} returns this
 */
proto.SUA_Microservices_gRPC.User.prototype.setIsadmin = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.SUA_Microservices_gRPC.Users.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SUA_Microservices_gRPC.Users.prototype.toObject = function(opt_includeInstance) {
  return proto.SUA_Microservices_gRPC.Users.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SUA_Microservices_gRPC.Users} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SUA_Microservices_gRPC.Users.toObject = function(includeInstance, msg) {
  var f, obj = {
    usersList: jspb.Message.toObjectList(msg.getUsersList(),
    proto.SUA_Microservices_gRPC.User.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SUA_Microservices_gRPC.Users}
 */
proto.SUA_Microservices_gRPC.Users.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SUA_Microservices_gRPC.Users;
  return proto.SUA_Microservices_gRPC.Users.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SUA_Microservices_gRPC.Users} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SUA_Microservices_gRPC.Users}
 */
proto.SUA_Microservices_gRPC.Users.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.SUA_Microservices_gRPC.User;
      reader.readMessage(value,proto.SUA_Microservices_gRPC.User.deserializeBinaryFromReader);
      msg.addUsers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SUA_Microservices_gRPC.Users.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SUA_Microservices_gRPC.Users.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SUA_Microservices_gRPC.Users} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SUA_Microservices_gRPC.Users.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.SUA_Microservices_gRPC.User.serializeBinaryToWriter
    );
  }
};


/**
 * repeated User Users = 1;
 * @return {!Array<!proto.SUA_Microservices_gRPC.User>}
 */
proto.SUA_Microservices_gRPC.Users.prototype.getUsersList = function() {
  return /** @type{!Array<!proto.SUA_Microservices_gRPC.User>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.SUA_Microservices_gRPC.User, 1));
};


/**
 * @param {!Array<!proto.SUA_Microservices_gRPC.User>} value
 * @return {!proto.SUA_Microservices_gRPC.Users} returns this
*/
proto.SUA_Microservices_gRPC.Users.prototype.setUsersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.SUA_Microservices_gRPC.User=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SUA_Microservices_gRPC.User}
 */
proto.SUA_Microservices_gRPC.Users.prototype.addUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.SUA_Microservices_gRPC.User, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SUA_Microservices_gRPC.Users} returns this
 */
proto.SUA_Microservices_gRPC.Users.prototype.clearUsersList = function() {
  return this.setUsersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SUA_Microservices_gRPC.Order.prototype.toObject = function(opt_includeInstance) {
  return proto.SUA_Microservices_gRPC.Order.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SUA_Microservices_gRPC.Order} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SUA_Microservices_gRPC.Order.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    orderedby: jspb.Message.getFieldWithDefault(msg, 2, ""),
    price: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    ordereditems: (f = msg.getOrdereditems()) && proto.SUA_Microservices_gRPC.Items.toObject(includeInstance, f),
    orderedfrom: (f = msg.getOrderedfrom()) && proto.SUA_Microservices_gRPC.Supplier.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SUA_Microservices_gRPC.Order}
 */
proto.SUA_Microservices_gRPC.Order.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SUA_Microservices_gRPC.Order;
  return proto.SUA_Microservices_gRPC.Order.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SUA_Microservices_gRPC.Order} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SUA_Microservices_gRPC.Order}
 */
proto.SUA_Microservices_gRPC.Order.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderedby(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 4:
      var value = new proto.SUA_Microservices_gRPC.Items;
      reader.readMessage(value,proto.SUA_Microservices_gRPC.Items.deserializeBinaryFromReader);
      msg.setOrdereditems(value);
      break;
    case 5:
      var value = new proto.SUA_Microservices_gRPC.Supplier;
      reader.readMessage(value,proto.SUA_Microservices_gRPC.Supplier.deserializeBinaryFromReader);
      msg.setOrderedfrom(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SUA_Microservices_gRPC.Order.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SUA_Microservices_gRPC.Order.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SUA_Microservices_gRPC.Order} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SUA_Microservices_gRPC.Order.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOrderedby();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getOrdereditems();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.SUA_Microservices_gRPC.Items.serializeBinaryToWriter
    );
  }
  f = message.getOrderedfrom();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.SUA_Microservices_gRPC.Supplier.serializeBinaryToWriter
    );
  }
};


/**
 * optional string OrderId = 1;
 * @return {string}
 */
proto.SUA_Microservices_gRPC.Order.prototype.getOrderid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.SUA_Microservices_gRPC.Order} returns this
 */
proto.SUA_Microservices_gRPC.Order.prototype.setOrderid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string OrderedBy = 2;
 * @return {string}
 */
proto.SUA_Microservices_gRPC.Order.prototype.getOrderedby = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.SUA_Microservices_gRPC.Order} returns this
 */
proto.SUA_Microservices_gRPC.Order.prototype.setOrderedby = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional double Price = 3;
 * @return {number}
 */
proto.SUA_Microservices_gRPC.Order.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SUA_Microservices_gRPC.Order} returns this
 */
proto.SUA_Microservices_gRPC.Order.prototype.setPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional Items OrderedItems = 4;
 * @return {?proto.SUA_Microservices_gRPC.Items}
 */
proto.SUA_Microservices_gRPC.Order.prototype.getOrdereditems = function() {
  return /** @type{?proto.SUA_Microservices_gRPC.Items} */ (
    jspb.Message.getWrapperField(this, proto.SUA_Microservices_gRPC.Items, 4));
};


/**
 * @param {?proto.SUA_Microservices_gRPC.Items|undefined} value
 * @return {!proto.SUA_Microservices_gRPC.Order} returns this
*/
proto.SUA_Microservices_gRPC.Order.prototype.setOrdereditems = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SUA_Microservices_gRPC.Order} returns this
 */
proto.SUA_Microservices_gRPC.Order.prototype.clearOrdereditems = function() {
  return this.setOrdereditems(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SUA_Microservices_gRPC.Order.prototype.hasOrdereditems = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Supplier OrderedFrom = 5;
 * @return {?proto.SUA_Microservices_gRPC.Supplier}
 */
proto.SUA_Microservices_gRPC.Order.prototype.getOrderedfrom = function() {
  return /** @type{?proto.SUA_Microservices_gRPC.Supplier} */ (
    jspb.Message.getWrapperField(this, proto.SUA_Microservices_gRPC.Supplier, 5));
};


/**
 * @param {?proto.SUA_Microservices_gRPC.Supplier|undefined} value
 * @return {!proto.SUA_Microservices_gRPC.Order} returns this
*/
proto.SUA_Microservices_gRPC.Order.prototype.setOrderedfrom = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SUA_Microservices_gRPC.Order} returns this
 */
proto.SUA_Microservices_gRPC.Order.prototype.clearOrderedfrom = function() {
  return this.setOrderedfrom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SUA_Microservices_gRPC.Order.prototype.hasOrderedfrom = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.SUA_Microservices_gRPC.Orders.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SUA_Microservices_gRPC.Orders.prototype.toObject = function(opt_includeInstance) {
  return proto.SUA_Microservices_gRPC.Orders.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SUA_Microservices_gRPC.Orders} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SUA_Microservices_gRPC.Orders.toObject = function(includeInstance, msg) {
  var f, obj = {
    ordersList: jspb.Message.toObjectList(msg.getOrdersList(),
    proto.SUA_Microservices_gRPC.Order.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SUA_Microservices_gRPC.Orders}
 */
proto.SUA_Microservices_gRPC.Orders.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SUA_Microservices_gRPC.Orders;
  return proto.SUA_Microservices_gRPC.Orders.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SUA_Microservices_gRPC.Orders} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SUA_Microservices_gRPC.Orders}
 */
proto.SUA_Microservices_gRPC.Orders.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.SUA_Microservices_gRPC.Order;
      reader.readMessage(value,proto.SUA_Microservices_gRPC.Order.deserializeBinaryFromReader);
      msg.addOrders(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SUA_Microservices_gRPC.Orders.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SUA_Microservices_gRPC.Orders.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SUA_Microservices_gRPC.Orders} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SUA_Microservices_gRPC.Orders.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrdersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.SUA_Microservices_gRPC.Order.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Order Orders = 1;
 * @return {!Array<!proto.SUA_Microservices_gRPC.Order>}
 */
proto.SUA_Microservices_gRPC.Orders.prototype.getOrdersList = function() {
  return /** @type{!Array<!proto.SUA_Microservices_gRPC.Order>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.SUA_Microservices_gRPC.Order, 1));
};


/**
 * @param {!Array<!proto.SUA_Microservices_gRPC.Order>} value
 * @return {!proto.SUA_Microservices_gRPC.Orders} returns this
*/
proto.SUA_Microservices_gRPC.Orders.prototype.setOrdersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.SUA_Microservices_gRPC.Order=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SUA_Microservices_gRPC.Order}
 */
proto.SUA_Microservices_gRPC.Orders.prototype.addOrders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.SUA_Microservices_gRPC.Order, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SUA_Microservices_gRPC.Orders} returns this
 */
proto.SUA_Microservices_gRPC.Orders.prototype.clearOrdersList = function() {
  return this.setOrdersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SUA_Microservices_gRPC.Status.prototype.toObject = function(opt_includeInstance) {
  return proto.SUA_Microservices_gRPC.Status.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SUA_Microservices_gRPC.Status} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SUA_Microservices_gRPC.Status.toObject = function(includeInstance, msg) {
  var f, obj = {
    online: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    title: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SUA_Microservices_gRPC.Status}
 */
proto.SUA_Microservices_gRPC.Status.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SUA_Microservices_gRPC.Status;
  return proto.SUA_Microservices_gRPC.Status.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SUA_Microservices_gRPC.Status} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SUA_Microservices_gRPC.Status}
 */
proto.SUA_Microservices_gRPC.Status.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOnline(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SUA_Microservices_gRPC.Status.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SUA_Microservices_gRPC.Status.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SUA_Microservices_gRPC.Status} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SUA_Microservices_gRPC.Status.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOnline();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool Online = 1;
 * @return {boolean}
 */
proto.SUA_Microservices_gRPC.Status.prototype.getOnline = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SUA_Microservices_gRPC.Status} returns this
 */
proto.SUA_Microservices_gRPC.Status.prototype.setOnline = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string Title = 2;
 * @return {string}
 */
proto.SUA_Microservices_gRPC.Status.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.SUA_Microservices_gRPC.Status} returns this
 */
proto.SUA_Microservices_gRPC.Status.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SUA_Microservices_gRPC.Supplier.prototype.toObject = function(opt_includeInstance) {
  return proto.SUA_Microservices_gRPC.Supplier.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SUA_Microservices_gRPC.Supplier} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SUA_Microservices_gRPC.Supplier.toObject = function(includeInstance, msg) {
  var f, obj = {
    supplierid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    address: jspb.Message.getFieldWithDefault(msg, 3, ""),
    phonenumber: jspb.Message.getFieldWithDefault(msg, 4, ""),
    email: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SUA_Microservices_gRPC.Supplier}
 */
proto.SUA_Microservices_gRPC.Supplier.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SUA_Microservices_gRPC.Supplier;
  return proto.SUA_Microservices_gRPC.Supplier.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SUA_Microservices_gRPC.Supplier} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SUA_Microservices_gRPC.Supplier}
 */
proto.SUA_Microservices_gRPC.Supplier.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSupplierid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhonenumber(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SUA_Microservices_gRPC.Supplier.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SUA_Microservices_gRPC.Supplier.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SUA_Microservices_gRPC.Supplier} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SUA_Microservices_gRPC.Supplier.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSupplierid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPhonenumber();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string SupplierId = 1;
 * @return {string}
 */
proto.SUA_Microservices_gRPC.Supplier.prototype.getSupplierid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.SUA_Microservices_gRPC.Supplier} returns this
 */
proto.SUA_Microservices_gRPC.Supplier.prototype.setSupplierid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Name = 2;
 * @return {string}
 */
proto.SUA_Microservices_gRPC.Supplier.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.SUA_Microservices_gRPC.Supplier} returns this
 */
proto.SUA_Microservices_gRPC.Supplier.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Address = 3;
 * @return {string}
 */
proto.SUA_Microservices_gRPC.Supplier.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.SUA_Microservices_gRPC.Supplier} returns this
 */
proto.SUA_Microservices_gRPC.Supplier.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string PhoneNumber = 4;
 * @return {string}
 */
proto.SUA_Microservices_gRPC.Supplier.prototype.getPhonenumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.SUA_Microservices_gRPC.Supplier} returns this
 */
proto.SUA_Microservices_gRPC.Supplier.prototype.setPhonenumber = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string Email = 5;
 * @return {string}
 */
proto.SUA_Microservices_gRPC.Supplier.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.SUA_Microservices_gRPC.Supplier} returns this
 */
proto.SUA_Microservices_gRPC.Supplier.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.SUA_Microservices_gRPC.Suppliers.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SUA_Microservices_gRPC.Suppliers.prototype.toObject = function(opt_includeInstance) {
  return proto.SUA_Microservices_gRPC.Suppliers.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SUA_Microservices_gRPC.Suppliers} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SUA_Microservices_gRPC.Suppliers.toObject = function(includeInstance, msg) {
  var f, obj = {
    suppliersList: jspb.Message.toObjectList(msg.getSuppliersList(),
    proto.SUA_Microservices_gRPC.Supplier.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SUA_Microservices_gRPC.Suppliers}
 */
proto.SUA_Microservices_gRPC.Suppliers.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SUA_Microservices_gRPC.Suppliers;
  return proto.SUA_Microservices_gRPC.Suppliers.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SUA_Microservices_gRPC.Suppliers} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SUA_Microservices_gRPC.Suppliers}
 */
proto.SUA_Microservices_gRPC.Suppliers.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.SUA_Microservices_gRPC.Supplier;
      reader.readMessage(value,proto.SUA_Microservices_gRPC.Supplier.deserializeBinaryFromReader);
      msg.addSuppliers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SUA_Microservices_gRPC.Suppliers.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SUA_Microservices_gRPC.Suppliers.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SUA_Microservices_gRPC.Suppliers} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SUA_Microservices_gRPC.Suppliers.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuppliersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.SUA_Microservices_gRPC.Supplier.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Supplier Suppliers = 1;
 * @return {!Array<!proto.SUA_Microservices_gRPC.Supplier>}
 */
proto.SUA_Microservices_gRPC.Suppliers.prototype.getSuppliersList = function() {
  return /** @type{!Array<!proto.SUA_Microservices_gRPC.Supplier>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.SUA_Microservices_gRPC.Supplier, 1));
};


/**
 * @param {!Array<!proto.SUA_Microservices_gRPC.Supplier>} value
 * @return {!proto.SUA_Microservices_gRPC.Suppliers} returns this
*/
proto.SUA_Microservices_gRPC.Suppliers.prototype.setSuppliersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.SUA_Microservices_gRPC.Supplier=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SUA_Microservices_gRPC.Supplier}
 */
proto.SUA_Microservices_gRPC.Suppliers.prototype.addSuppliers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.SUA_Microservices_gRPC.Supplier, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SUA_Microservices_gRPC.Suppliers} returns this
 */
proto.SUA_Microservices_gRPC.Suppliers.prototype.clearSuppliersList = function() {
  return this.setSuppliersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SUA_Microservices_gRPC.Item.prototype.toObject = function(opt_includeInstance) {
  return proto.SUA_Microservices_gRPC.Item.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SUA_Microservices_gRPC.Item} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SUA_Microservices_gRPC.Item.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    model: jspb.Message.getFieldWithDefault(msg, 3, ""),
    instock: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SUA_Microservices_gRPC.Item}
 */
proto.SUA_Microservices_gRPC.Item.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SUA_Microservices_gRPC.Item;
  return proto.SUA_Microservices_gRPC.Item.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SUA_Microservices_gRPC.Item} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SUA_Microservices_gRPC.Item}
 */
proto.SUA_Microservices_gRPC.Item.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setItemid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setModel(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInstock(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SUA_Microservices_gRPC.Item.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SUA_Microservices_gRPC.Item.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SUA_Microservices_gRPC.Item} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SUA_Microservices_gRPC.Item.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getModel();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getInstock();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string ItemId = 1;
 * @return {string}
 */
proto.SUA_Microservices_gRPC.Item.prototype.getItemid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.SUA_Microservices_gRPC.Item} returns this
 */
proto.SUA_Microservices_gRPC.Item.prototype.setItemid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Name = 2;
 * @return {string}
 */
proto.SUA_Microservices_gRPC.Item.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.SUA_Microservices_gRPC.Item} returns this
 */
proto.SUA_Microservices_gRPC.Item.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Model = 3;
 * @return {string}
 */
proto.SUA_Microservices_gRPC.Item.prototype.getModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.SUA_Microservices_gRPC.Item} returns this
 */
proto.SUA_Microservices_gRPC.Item.prototype.setModel = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool InStock = 4;
 * @return {boolean}
 */
proto.SUA_Microservices_gRPC.Item.prototype.getInstock = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SUA_Microservices_gRPC.Item} returns this
 */
proto.SUA_Microservices_gRPC.Item.prototype.setInstock = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.SUA_Microservices_gRPC.Items.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SUA_Microservices_gRPC.Items.prototype.toObject = function(opt_includeInstance) {
  return proto.SUA_Microservices_gRPC.Items.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SUA_Microservices_gRPC.Items} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SUA_Microservices_gRPC.Items.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.SUA_Microservices_gRPC.Item.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SUA_Microservices_gRPC.Items}
 */
proto.SUA_Microservices_gRPC.Items.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SUA_Microservices_gRPC.Items;
  return proto.SUA_Microservices_gRPC.Items.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SUA_Microservices_gRPC.Items} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SUA_Microservices_gRPC.Items}
 */
proto.SUA_Microservices_gRPC.Items.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.SUA_Microservices_gRPC.Item;
      reader.readMessage(value,proto.SUA_Microservices_gRPC.Item.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SUA_Microservices_gRPC.Items.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SUA_Microservices_gRPC.Items.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SUA_Microservices_gRPC.Items} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SUA_Microservices_gRPC.Items.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.SUA_Microservices_gRPC.Item.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Item Items = 1;
 * @return {!Array<!proto.SUA_Microservices_gRPC.Item>}
 */
proto.SUA_Microservices_gRPC.Items.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.SUA_Microservices_gRPC.Item>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.SUA_Microservices_gRPC.Item, 1));
};


/**
 * @param {!Array<!proto.SUA_Microservices_gRPC.Item>} value
 * @return {!proto.SUA_Microservices_gRPC.Items} returns this
*/
proto.SUA_Microservices_gRPC.Items.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.SUA_Microservices_gRPC.Item=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SUA_Microservices_gRPC.Item}
 */
proto.SUA_Microservices_gRPC.Items.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.SUA_Microservices_gRPC.Item, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SUA_Microservices_gRPC.Items} returns this
 */
proto.SUA_Microservices_gRPC.Items.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};


goog.object.extend(exports, proto.SUA_Microservices_gRPC);
